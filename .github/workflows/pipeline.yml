name: DevSecOps

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Run linting
        run: yarn lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Run unit tests
        run: yarn test

  code_scan:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        language:
          - javascript

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          output: 'reports'
          upload: false

      - name: Move file to merged.sarif (CodeQL)
        run: mv reports/*.sarif merged.sarif

      - name: filter-sarif
        uses: advanced-security/filter-sarif@v1
        with:
          # filter out all test files unless they contain a sql-injection vulnerability
          patterns: |
            -**/*test*.js
          input: merged.sarif
          output: filtered.sarif

      - name: Check CodeQL results
        run: |
          # Parse SARIF content and check the length of "results" array
          SARIF_CONTENT=$(cat filtered.sarif)
          echo $SARIF_CONTENT
          RESULTS_LENGTH=$(echo $SARIF_CONTENT | jq -r '.runs[0].results | length')
          if [ "$RESULTS_LENGTH" -gt 0 ]; then
            echo "CodeQL found issues. Failing the workflow."
            exit 1
          else
            echo "CodeQL did not find any issues. Workflow continues."
          fi

  secrets_scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Scanner
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: 
      - lint
      - test
      - code_scan
      - secrets_scan

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t ${{ github.repository }} .

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker image tag ${{ github.repository }}:latest ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}